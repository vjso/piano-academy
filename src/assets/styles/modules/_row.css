/*!
reusable block to place elements in a row
*/

.row {

    /*! the columns inside the row are floated; so clear the floats after all the columns are added, ie at the end of row */
    @mixin clearfix;

    /*! 
        the modifier --gutters is used to have padding for each column inside the row; 
        ie all children inside the row but not the row itself.
        Also, the box-sizing should be border-box to allow the column width % to be relevant even with gutters.
        The box-sizing is set to border-box globally
    */
    &--gutters > div {
        padding-right: 65px;
        @mixin atMedium{
            padding-right: 65px;
        }
        
    }

    &--gutters--large > div {
        @mixin atMedium {
            padding-right: 30px;
            padding-left: 20px;
        }
        @mixin atLarge {
            padding-right: 75px;
            padding-left: 50px;
        }
    }

    &--gutters > div {
        padding-right: 65px;
    }


    
    /*! Adding gutters to columns will cause the last column also to have the gutter to the right, which is not needed.
        This can be handled by letting the row with gutter overflow its parent using a -ve margin
        (overflow by an amount of gutter width) and letting the parent hide the overflow
    */
    &--gutters {

        margin-right: -65px;

        @mixin atMedium {
            margin-right: -65px;
        }
        
    }

    &--gutters-large {
        margin-right: -100px;
    }

    &--gutters-small {
        @mixin atSmall{
            margin-right: -40px;
        }
    }

    /*! add bottom margin for small screens until the screen size hits medium. 
    No bottom margin for medium or larger screens */
    &--b-margin-until-medium {
        margin-bottom: 1rem;

        @media atMedium {
            &--b-margin-until-medium {
                margin-bottom: 0;
            }
        }

    }

    @mixin atMedium {

        &__4-column-on-medium-screen {
            float: left;
            width: 33.33%;
    
        }

        /*! column section slightly larger than 4 columns */
        &__4-column-on-medium-screen--larger {
            width: 37%
        }

        &__6-column-on-medium-screen {
            float: left;
            width: 50%
        }
    
        &__8-column-on-medium-screen {
            float: left;
            width: 66.66%;
        }

        /*! column section slightly smaller than 8 columns */
        &__8-column-on-medium-screen--smaller {
            width: 63%;
        }
    }


    @mixin atLarge {
        
        &__4-column-on-large-screen {
            float: left;
            width: 33.33%;
    
        }

        /*! column section slightly larger than 4 columns */
        &__4-column-on-large-screen--larger {
            width: 37%
        }

        &__6-column-on-large-screen {
            float: left;
            width: 50%
        }
    
        &__8-column-on-large-screen {
            float: left;
            width: 66.66%;
        }

        /*! column section slightly smaller than 8 columns */
        &__8-column-on-large-screen--smaller {
            width: 63%;
        }
    }

            
    &--t-padding {
        padding-top: 30px;
    }

    /*! equal height for all elements in this row using flexbox */
    &--equal-height-at-medium {
        @mixin atMedium {
            display: flex;
        }

        /*! target the columns in this row, ie the div elements */
        & > div {
            float: none;
            display: flex;
        }
    }

    /*! equal height for all elements in this row using flexbox */
    &--equal-height-at-large {
        @mixin atLarge {
            display: flex;
        }

        /*! target the columns in this row, ie the div elements */
        & > div {
            float: none;
            display: flex;
        }
    }
    
}